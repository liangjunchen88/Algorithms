Runtime
271 ms
Beats
92.63%
Memory
14.4 MB
Beats
82.28%

class Solution:
    def hasPath(self, maze: List[List[int]], start: List[int], destination: List[int]) -> bool:

        if not maze:
            return False

        Q = [start]
        m, n = len(maze), len(maze[0])
        dirs = ((1,0), (-1,0), (0,1), (0,-1))

        while Q:
            i, j = Q.pop()
            maze[i][j] = 2
            if [i, j] == destination:
                return True
            
            for x, y in dirs:
                row = i + x
                col = j + y
                while 0 <= row < m and 0 <= col < n and maze[row][col] != 1:
                    row += x
                    col += y
                row -= x
                col -= y
                if maze[row][col] == 0:
                    Q.append([row, col])
        
        return False

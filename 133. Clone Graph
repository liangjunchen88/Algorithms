# Runtime: 69 ms, faster than 42.46% of Python3 online submissions for Clone Graph.
# Memory Usage: 14.3 MB, less than 77.41% of Python3 online submissions for Clone Graph.

class Solution:
    def cloneGraph(self, node: 'Node') -> 'Node':
        if not node: return node
        q, clone = deque([node]), {node.val: Node(node.val, [])}
        while q:
            cur = q.popleft()
            cur_clone = clone[cur.val]
            for n in cur.neighbors:
                if n.val not in clone:
                    clone[n.val] = Node(n.val, [])
                    q.append(n)
                cur_clone.neighbors.append(clone[n.val])
        return clone[node.val]

Runtime
2877 ms
Beats
33.91%
Memory
29.8 MB
Beats
81.67%

from collections import deque

class Solution:
    def maxSlidingWindow(self, nums: List[int], k: int) -> List[int]:
        def cleanDeque(i):
            if deq and deq[0] == i - k:
                deq.popleft()
            while deq and nums[deq[-1]] < nums[i]:
                deq.pop()

        n = len(nums)
        if n * k == 0:
            return []
        if k == 1:
            return nums
        deq = deque()
        output = [nums[0]]
        for i in range(k):
            cleanDeque(i)
            deq.append(i)
            if output[0] < nums[i]:
                output[0] = nums[i]

        for j in range(k, n):
            cleanDeque(j)
            deq.append(j)
            output.append(nums[deq[0]])
        
        return output

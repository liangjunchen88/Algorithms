Runtime
520 ms
Beats
91.37%
Memory
25.1 MB
Beats
73.27%

class Solution:
    def findMinHeightTrees(self, n: int, edges: List[List[int]]) -> List[int]:

        if n <= 2:
            return [i for i in range(n)]

        neighbors = [set() for i in range(n)]

        for start, end in edges:
            neighbors[start].add(end)
            neighbors[end].add(start)
        
        leaves = []

        for i in range(n):
            if len(neighbors[i]) == 1:
                leaves.append(i)
        
        remaining_leaves = n

        while remaining_leaves > 2:
            new_leaves = []
            remaining_leaves -= len(leaves)
            while leaves:
                leaf = leaves.pop()
                neighbor = neighbors[leaf].pop()
                neighbors[neighbor].remove(leaf)
                if len(neighbors[neighbor]) == 1:
                    new_leaves.append(neighbor)
            leaves = new_leaves
        
        return leaves

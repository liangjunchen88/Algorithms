Runtime
1073 ms
Beats
67.41%
Memory
27.5 MB
Beats
12.29%

class Solution:
    def maxArea(self, height: List[int]) -> int:
        left, right = 0, len(height) -1
        max_area = 0
        while left < right:
            if height[left] < height[right]:
                if max_area < (right-left)*height[left]:
                    max_area = (right-left)*height[left]
                left += 1
            elif height[right] < height[left]:
                if max_area < (right-left)*height[right]:
                    max_area = (right-left)*height[right]
                right -= 1
            else:
                if max_area < (right-left)*height[right]:
                    max_area = (right-left)*height[right]
                if height[left+1] < height[right-1]:
                    right -= 1
                else:
                    left += 1
        return max_area

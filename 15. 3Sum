# Runtime: 927 ms, faster than 83.33% of Python3 online submissions for 3Sum.
# Memory Usage: 18.1 MB, less than 39.57% of Python3 online submissions for 3Sum.

class Solution:
    def threeSum(self, nums: List[int]) -> List[List[int]]:
        nums.sort()
        ans = []
        for l in range(len(nums)-2):
            if l>0 and nums[l]==nums[l-1]: continue
            m, r = l+1, len(nums)-1
            while m < r:
                if nums[l] + nums[m] + nums[r] > 0:
                    r -= 1
                elif nums[l] + nums[m] + nums[r] < 0:
                    m += 1
                else:
                    ans.append([nums[l], nums[m], nums[r]])
                    while m<r and nums[m] == nums[m+1]:
                        m += 1
                    while m<r and nums[r] == nums[r-1]:
                        r -= 1
                    m += 1
                    r -= 1
        return ans
                    

# Runtime: 47 ms, faster than 93.07% of Python3 online submissions for Diameter of Binary Tree.
# Memory Usage: 16.3 MB, less than 84.91% of Python3 online submissions for Diameter of Binary Tree.


class Solution:
    def diameterOfBinaryTree(self, root: Optional[TreeNode]) -> int:
        self.ans = 0
        def depth(p: Optional[TreeNode]) -> int:
            if not p :
                return 0
            lDepth, rDepth = depth(p.left), depth(p.right)
            self.ans = max(self.ans, lDepth + rDepth)
            return 1 + max(lDepth, rDepth)
        depth(root)
        return self.ans
